<!--
 * @Author: yranky douye@douye.top
 * @Date: 2023-06-13 23:55:20
 * @LastEditors: yranky douye@douye.top
 * @LastEditTime: 2023-08-19 20:58:31
 * @FilePath: \anydoor-v2\src\pages\lesson\add.nvue
 * @Description: 添加/编辑课程
 * 
 * Copyright (c) 2023 by anydoor.top|douyeblog.top, All Rights Reserved. 
-->
<template>
	<tm-app ref="app" color="whiteBg">
		<tm-navbar title="添加课程">
			<template #right>
				<anydoor-text class="flex-2" text="保存" :lines="1" style="margin:0 39rpx;text-align: right;"
					@click="addLesson"></anydoor-text>
			</template>
		</tm-navbar>
		<anydoor-item-picker-group>
			<anydoor-item-picker :list="nameList" showInput v-model:value="formData.name">
				<tm-cell :margin="[0, 0]" :titleFontSize="32" title="课程名称"
					:rightText="formData.name ? formData.name : '请选择'"></tm-cell>
			</anydoor-item-picker>
			<anydoor-item-picker :list="classnumsList" v-model:value="formData.classnums" :style-config="CONFIG_TYPE.FIVE">
				<tm-cell :margin="[0, 0]" :titleFontSize="32" title="课程节次" :rightText="showData.classnums"></tm-cell>
			</anydoor-item-picker>
			<anydoor-item-picker :list="weekdayList" v-model:value="formData.weekday" :style-config="CONFIG_TYPE.FIVE">
				<tm-cell :margin="[0, 0]" :titleFontSize="32" title="星期" :rightText="showData.weekday"></tm-cell>
			</anydoor-item-picker>
			<anydoor-item-picker :list="teacherList" showInput v-model:value="formData.teacher"
				:style-config="CONFIG_TYPE.ONE">
				<tm-cell :margin="[0, 0]" :titleFontSize="32" title="上课教师"
					:rightText="formData.teacher ? formData.teacher : '请选择'"></tm-cell>
			</anydoor-item-picker>
			<anydoor-item-picker :list="weeksList" v-model:value="formData.weeks" :style-config="CONFIG_TYPE.SIX">
				<tm-cell :margin="[0, 0]" :titleFontSize="32" title="周次" :rightText="showData.weeks"></tm-cell>
			</anydoor-item-picker>
			<anydoor-item-picker :list="roomList" showInput v-model:value="formData.room">
				<tm-cell :margin="[0, 0]" :titleFontSize="32" title="教室"
					:rightText="formData.room ? formData.room : '请选择'"></tm-cell>
			</anydoor-item-picker>
		</anydoor-item-picker-group>
	</tm-app>
</template>

<script lang="ts" setup>
import tmApp from "@/tmui/components/tm-app/tm-app.vue"
import tmNavbar from "@/tmui/components/tm-navbar/tm-navbar.vue"
import tmCell from "@/tmui/components/tm-cell/tm-cell.vue"
import { ref } from "vue"
import anydoorItemPickerGroup from "@/components/anydoor-item-picker/anydoor-item-picker-group.vue"
import anydoorItemPicker from "@/components/anydoor-item-picker/anydoor-item-picker.vue"
import { CONFIG_TYPE, IListArray } from "@/components/anydoor-item-picker/anydoor-item-picker"
import { watch } from "vue"
import { sequenceToRange } from "@/common/database/Lesson/lesson_temp_utils"
import { useLessonStore } from "@/store/lesson"
import { computed } from "vue"
import { isEmpty } from "lodash"
import Lesson from "@/common/database/Lesson/Lesson"
import ToastModule from "@/common/native/toast/ToastModule"
import { linkBack } from "@/common/utils/link"
import anydoorText from "@/components/anydoor-text/anydoor-text.vue"


//课程STORE
const lessonStore = useLessonStore()


const addLesson = async () => {
	if (isEmpty(formData.value.name)) ToastModule.show({ text: '请输入课程名称' })
	else if (isEmpty(formData.value.classnums)) ToastModule.show({ text: '请选择节次' })
	else if (isEmpty(formData.value.weekday)) ToastModule.show({ text: '请选择星期' })
	else if (isEmpty(formData.value.weeks)) ToastModule.show({ text: '请选择周次' })
	else {
		uni.$anydoor_native.Dialog_Module.showWaitingDialogSync({ title: '添加中，请稍等' });
		(await Lesson.getInstance()).addLesson(formData.value).then(res => {
			if (res) {
				ToastModule.show({ text: '添加成功!' })
				linkBack()
			}
		}).catch(e => {
			ToastModule.show({ text: e })
		}).finally(() => {
			uni.$anydoor_native.Dialog_Module.hideWaitingDialogSync({})
		})
	}
}




const formData = ref({
	//课程名称
	name: '',
	//上课节次
	classnums: [],
	//上课星期
	weekday: [],
	//上课教师
	teacher: '',
	//周次
	weeks: [],
	//上课地点
	room: ''
})

const showData = ref({
	//节次
	classnums: '',
	//星期
	weekday: '',
	//周次
	weeks: ''
})

watch(formData, () => {
	// 节次
	showData.value.classnums = formData.value.classnums.length > 0 ? sequenceToRange(formData.value.classnums) : "请选择"
	//周次
	showData.value.weeks = formData.value.weeks.length > 0 ? sequenceToRange(formData.value.weeks) : "请选择"
	//星期
	showData.value.weekday = formData.value.weekday.length > 0 ? (formData.value.weekday.map(item => {
		return weekdayList.value.find(weekItem => weekItem.value === item)?.label
	}).join(',') || '请选择') : '请选择'
}, { immediate: true, deep: true })

//课程列表
// const nameList = ref<string[]>([
// 	"张三", '李四', '王五', '哈哈哈：哈哈哈哈哈哈哈哈哈'
// ])
const nameList = computed<string[]>(() => {
	return [...new Set(lessonStore.lessonList.map(item => {
		return item.name
	}))]
})

//课程列表
const classnumsList = ref<number[]>(new Array(10).fill(0).map((item, index) => {
	return index + 1
}))

//星期列表
const weekdayList = ref<IListArray[]>(['周日', '周一', '周二', '周三', '周四', '周五', '周六'].map((item, index) => {
	return { label: item, value: index }
}))

//教师列表
const teacherList = computed<string[]>(() => {
	return [...new Set(lessonStore.lessonList.map(item => {
		return item.teacher
	}).filter(item => !isEmpty(item)))]
})

//周次列表
const weeksList = ref<number[]>(new Array(35).fill(0).map((item, index) => {
	return index + 1
}))

//教室列表
const roomList = computed<string[]>(() => {
	return [...new Set(lessonStore.lessonList.map(item => {
		return item.position
	}).filter(item => !isEmpty(item)))]
})
</script>
