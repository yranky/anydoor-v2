<template>
	<tm-app ref="app" color="whiteBg">
		<anydoorPage v-model:refresh-complete="article.ready" @refresh="retryDetail">
			<template #navBar>
				<tm-navbar :title="article.title"></tm-navbar>
			</template>
			<template #content>
				<!-- 加载失败的时候 -->
				<tm-result v-if="fail" status="error" :title="failText" @click="retryDetail" btnText="重试"
					subTitle=" "></tm-result>
				<!-- 文章 -->
				<view class="article" v-if="!fail">
					<!-- 文章标题骨架屏 -->
					<view v-if="!article.ready">
						<tm-skeleton-line :height="70"></tm-skeleton-line>
						<tm-skeleton-line :height="70"></tm-skeleton-line>
					</view>
					<!-- 文章标题 -->
					<tm-translate name="fade" v-if="article.ready">
						<view class="article-title">
							<anydoor-text :fontSize="40" bold lineHeight="70" :text="article.title">
							</anydoor-text>
						</view>
					</tm-translate>
					<!-- 文章信息详情 -->

					<!-- 文章信息详情骨架屏 -->
					<view class="article-info" v-if="!article.ready">
						<view class="article-info flex flex-row">
							<view style="width:100rpx">
								<tm-skeleton-line class="ml-10 mr-10 round-25" :height="80"></tm-skeleton-line>
							</view>
							<view class="flex-1">
								<tm-skeleton-line class="flex-1 ml-10 mr-10" :height="80"></tm-skeleton-line>
							</view>
							<view style="width:120rpx">
								<tm-skeleton-line class="flex-0 ml-10 mr-10" :height="80"></tm-skeleton-line>
							</view>
						</view>
					</view>

					<tm-translate name="fade" v-if="article.ready">
						<view class="article-info flex flex-row">
							<tm-avatar :img="article.avatar" :round="15" :size="80"></tm-avatar>
							<view class="article-author flex-1 flex-col">
								<anydoor-text class="flex-1" :text="article.nickname" bold :fontSize="30" lineHeight="45"
									:lines="1"></anydoor-text>
								<view class="flex flex-row">
									<anydoor-text margin="0 5rpx 0 0" :text="article.start_time" color="grey"
										lineHeight="35" :lines="1">
									</anydoor-text>
									<anydoor-text class="flex-1" margin="0 5rpx" :text="article.author" color="grey"
										lineHeight="35" :lines="1">
									</anydoor-text>
								</view>
							</view>
							<!-- <view class="flex flex-row">
							<tm-tag class="flex-center" size="n" label="关注" text></tm-tag>
						</view> -->
						</view>
					</tm-translate>

					<!-- 文章内容骨架屏 -->
					<template v-if="!parseReady || !article.ready">
						<tm-skeleton-line v-for="item in 8" :key="item" class="article-info" :height="60"
							style="margin: 10rpx 0;"></tm-skeleton-line>
					</template>

					<!-- 文章内容 -->
					<tm-translate name="fade" :autoPlay="false" ref="articleContent" v-if="article.ready">
						<view class="article-content" :style="{ height: parseReady ? '' : 0 }">
							<anydoor-richtext :content="article.content"
								@ready="parseReady = true; proxy.$refs.articleContent.play()">
							</anydoor-richtext>
						</view>
					</tm-translate>
				</view>
			</template>
		</anydoorPage>
	</tm-app>
</template>

<script lang="ts" setup>
import tmApp from "@/tmui/components/tm-app/tm-app.vue"
import tmNavbar from "@/tmui/components/tm-navbar/tm-navbar.vue"
import tmAvatar from "@/tmui/components/tm-avatar/tm-avatar.vue"
import tmTag from "@/tmui/components/tm-tag/tm-tag.vue"
import tmSkeletonLine from "@/tmui/components/tm-skeleton-line/tm-skeleton-line"
import tmTranslate from "@/tmui/components/tm-translate/tm-translate"
import anydoorText from "@/components/anydoor-text/anydoor-text.vue"
import anydoorPage from "@/components/anydoor-page/anydoor-page.vue"

import {
	ref,
	getCurrentInstance,
	reactive
} from "vue"
import { onLoad } from "@dcloudio/uni-app"
import { itemNotice } from "@/common/service/notice"
import { debounce } from "lodash"
import CODE from "@/common/define/code"
import { diffTwoDays } from "@/common/utils/date"
import tmResult from "@/tmui/components/tm-result/tm-result.vue"

const {
	proxy
} = getCurrentInstance();

//通知的id
const itemId = ref<string>("0")

//加载失败时
const fail = ref<boolean>(false)
const failText = ref<string>("加载失败")

//onLoad接收参数
onLoad((option: any) => {
	itemId.value = decodeURIComponent(option.id)
	//获取数据
	getDetail()
})

//重试
const retryDetail = () => {
	fail.value = false
	article.ready = false
	getDetail()
}

const getDetail = debounce(async (): Promise<void> => {
	//还原
	article.ready = false
	fail.value = false
	try {
		const data = await itemNotice(itemId.value)
		//加载成功
		if (data.code === CODE.SUCCESS) {
			article.author = data.data.author
			article.content = data.data.detail
			article.nickname = data.data.nickname
			article.start_time = diffTwoDays(data.data.start_time)
			article.title = data.data.title
			article.avatar = data.data.avatar
		} else {
			fail.value = true
			failText.value = data.msg as string
		}
	} catch {
		fail.value = true
		failText.value = "加载失败!"
	}
	article.ready = true
}, 300)

//文章加载完成
const article = reactive({
	ready: false,
	content: '',
	title: '',
	start_time: '',
	author: '',
	nickname: '',
	avatar: ''
})

//文章内容加载完成
const parseReady = ref(false)
</script>

<style lang="scss" scoped>
.article {
	margin: 10rpx 40rpx;

	.article-info {
		margin: 30rpx 0;

		.article-author {
			margin: 0 20rpx;
		}

		.article-content {}
	}
}
</style>
