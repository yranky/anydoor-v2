<!--
 * @Author: yranky douye@douye.top
 * @Date: 2022-08-08 10:27:24
 * @LastEditors: yranky douye@douye.top
 * @LastEditTime: 2023-02-17 23:42:24
 * @FilePath: \anydoor-v2\src\pages\setting\setting.nvue
 * @Description: 我的设置
 * 
 * Copyright (c) 2023 by anydoor.top|douyeblog.top, All Rights Reserved. 
-->
<template>
	<tm-app ref="app" color="whiteBg">
		<tm-navbar title="我的设置"></tm-navbar>
		<view style="margin: 10rpx 20rpx;">
			<anydoor-text text="账号" color="grey" margin="30rpx 5rpx 5rpx 5rpx"></anydoor-text>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="账号与安全"> </tm-cell>
			<anydoor-text text="隐私" color="grey" margin="30rpx 5rpx 5rpx 5rpx"></anydoor-text>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="权限设置"> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="个人信息手机清单"> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="与第三方共享信息清单"> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="个人信息保护设置"> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="服务条款与隐私政策"> </tm-cell>
			<anydoor-text text="深色模式" color="grey" margin="30rpx 5rpx 5rpx 5rpx"></anydoor-text>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="跟随系统">
				<template v-slot:right>
					<tm-switch barIcon="" linear="left" linearDeep="accent" v-model="themeConfig.followSystem"
						:margin="[12, 0]" @click="changeThemeFollowSystem"></tm-switch>
				</template>
			</tm-cell>

			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="深色模式" v-if="!themeConfig.followSystem">
				<template v-slot:right>
					<tm-switch barIcon="" linear="left" linearDeep="accent" :margin="[12, 0]"
						:default-value="store.tmStore.dark" @click="changeTheme"></tm-switch>
				</template>
			</tm-cell>
			<anydoor-text text="其它" color="grey" margin="30rpx 5rpx 5rpx 5rpx"></anydoor-text>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="清理缓存"> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="关于我们"> </tm-cell>
		</view>
	</tm-app>
</template>

<script lang="ts" setup>
import tmApp from "@/tmui/components/tm-app/tm-app.vue"
import tmNavbar from "@/tmui/components/tm-navbar/tm-navbar.vue"
import tmCell from "@/tmui/components/tm-cell/tm-cell.vue"
import tmSwitch from "@/tmui/components/tm-switch/tm-switch.vue"
import { reactive } from "vue"
import Theme from "@/common/theme/Theme"
import { IThemeDatabaseKeys } from "@/common/theme/IThemeDatabase"
import { onBeforeMount, watch } from "vue"
import { useTmpiniaStore } from "@/tmui/tool/lib/tmpinia"

const store = useTmpiniaStore()

//主题配置
const themeConfig = reactive({
	followSystem: true
})

//初始化样式等
const initItems = async () => {
	//主题bufen
	const ThemeInstance = await Theme.getInstance()
	//获取是否开启了跟随
	const res: any = await ThemeInstance.getThemeData()
	//跟随系统
	themeConfig.followSystem = res[IThemeDatabaseKeys.FOLLOW_SYSTEM] || false
}
//在挂载之前获取
onBeforeMount(() => {
	initItems()
})

//修改深色模式
const changeThemeFollowSystem = async () => {
	//主题bufen
	const ThemeInstance = await Theme.getInstance()
	//取反
	ThemeInstance.setSystemFirst(themeConfig.followSystem)
}
//修改主题
const changeTheme = () => {
	store.setTmVuetifyDark(!store.tmStore.dark)
}

</script>
