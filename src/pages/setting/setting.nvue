<!--
 * @Author: yranky douye@douye.top
 * @Date: 2022-08-08 10:27:24
 * @LastEditors: yranky douye@douye.top
 * @LastEditTime: 2023-08-12 20:22:02
 * @FilePath: \anydoor-v2\src\pages\setting\setting.nvue
 * @Description: 我的设置
 * 
 * Copyright (c) 2023 by anydoor.top|douyeblog.top, All Rights Reserved. 
-->
<template>
	<tm-app ref="app" color="whiteBg">
		<tm-navbar title="我的设置"></tm-navbar>
		<view style="margin: 10rpx 20rpx;">
			<anydoor-text text="账号" color="grey" margin="30rpx 5rpx 5rpx 5rpx"></anydoor-text>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="账号与安全" @click="toWebDetail"> </tm-cell>
			<!-- <anydoor-text text="隐私" color="grey" margin="30rpx 5rpx 5rpx 5rpx"></anydoor-text> -->
			<!-- <tm-cell :margin="[0, 0]" :titleFontSize="32" title="权限设置"> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="个人信息手机清单"> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="与第三方共享信息清单"> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="个人信息保护设置"> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="服务条款与隐私政策"> </tm-cell> -->
			<anydoor-text text="深色模式" color="grey" margin="30rpx 5rpx 5rpx 5rpx"></anydoor-text>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="跟随系统">
				<template v-slot:right>
					<tm-switch barIcon="" linear="left" linearDeep="accent" v-model="themeConfig.followSystem"
						:margin="[12, 0]" @click="changeThemeFollowSystem"
						:default-value="themeConfig.followSystem"></tm-switch>
				</template>
			</tm-cell>

			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="深色模式" v-if="!themeConfig.followSystem">
				<template v-slot:right>
					<tm-switch barIcon="" linear="left" linearDeep="accent" :margin="[12, 0]"
						:default-value="store.tmStore.dark" @click="changeTheme"></tm-switch>
				</template>
			</tm-cell>
			<anydoor-text text="其它" color="grey" margin="30rpx 5rpx 5rpx 5rpx"></anydoor-text>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="清理缓存" @click="clearCache" :rightText="cacheSize"
				rightIcon=""> </tm-cell>
			<tm-cell :margin="[0, 0]" :titleFontSize="32" title="关于我们" @click="linkTo(ROUTE_PATH.APP_DETAIL)"> </tm-cell>
		</view>
		<!-- 退出登录 -->
		<view style="margin: 10rpx 20rpx;" v-if="userStore.token">
			<tm-button block label="退出账户登录" @click="logout"></tm-button>
		</view>
	</tm-app>
</template>

<script lang="ts" setup>
import tmApp from "@/tmui/components/tm-app/tm-app.vue"
import tmNavbar from "@/tmui/components/tm-navbar/tm-navbar.vue"
import tmCell from "@/tmui/components/tm-cell/tm-cell.vue"
import tmSwitch from "@/tmui/components/tm-switch/tm-switch.vue"
import { reactive } from "vue"
import Theme from "@/common/theme/Theme"
import { IThemeDatabaseKeys } from "@/common/theme/IThemeDatabase"
import { onBeforeMount, watch } from "vue"
import { useTmpiniaStore } from "@/tmui/tool/lib/tmpinia"
import { ref } from "vue"
import ToastModule from "@/common/native/toast/ToastModule"
import User from "@/common/database/user/User"
import { useUserStore } from "@/store/user"
import tmButton from "@/tmui/components/tm-button/tm-button.vue"
import { linkTo } from "@/common/utils/link"
import { ROUTE_PATH } from "@/router/ROUTE_PATH"
import { UCENTER_BASE_URL } from "@/common/request/urls"

const store = useTmpiniaStore()
const userStore = useUserStore()

//主题配置
const themeConfig = reactive({
	followSystem: true
})

//初始化样式等
const initItems = async () => {
	const data = uni.$anydoor.Theme!.getClassData()
	themeConfig.followSystem = data?.follow_system
}
//在挂载之前获取
onBeforeMount(() => {
	initItems()
	//获取size
	getCacheSize()
})

//修改深色模式
const changeThemeFollowSystem = async () => {
	//主题bufen
	const ThemeInstance = await Theme.getInstance()
	//取反
	ThemeInstance.setSystemFirst(themeConfig.followSystem)
}
//修改主题
const changeTheme = () => {
	uni.$anydoor.Theme?.changeTheme(!store.tmStore.dark)
}

//缓存相关
const cacheSize = ref<string>()
const getCacheSize = () => {
	(plus as any).cache.calculate((e: number) => {
		cacheSize.value = Math.floor(e / 1024 / 1024 * 100) / 100 + 'M';
	})
}
const clearCache = () => {
	uni.$anydoor_native.Dialog_Module.showMessageDialog({
		title: '提示',
		okText: '确定',
		cancelable: true,
		cancelText: '取消',
		content: `确认清除缓存吗(${cacheSize.value})`
	}, (res) => {
		if (res.data?.type === "ok") {
			(plus as any).cache.clear(() => {
				ToastModule.show({ text: '清除成功!' })
				getCacheSize()
			})
		}
	})
}

//退出账号登录
const logout = async () => {
	uni.$anydoor_native.Dialog_Module.showWaitingDialogSync({})
	try {
		await (await User.getInstance()).logoutUserAccount()
		ToastModule.show({ text: '退出登录成功!' })
	} catch (e) {
		console.log(e)
	}
	uni.$anydoor_native.Dialog_Module.hideWaitingDialogSync({})
}

//跳转到修改信息
const toWebDetail = (e: any) => {
	linkTo(ROUTE_PATH.WEBVIEW, {
		url: UCENTER_BASE_URL + "/user/home",
		title: "账号与安全"
	})
}
</script>
