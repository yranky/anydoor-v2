<template>
	<tm-app ref="app" color="whiteBg">
		<anydoorPage v-model:refresh-complete="refreshComplete" @refresh="refresh">
			<template #navBar>
				<view class="index-navbar-box fixed l-0 t-0" ref="navbar" :style="{

				}">
					<view class="index-navbar flex flex-row flex-nowrap" :style="{
						paddingTop: statusBarHeight
					}">
						<view class="flex-1 pl-32 pr-16">
							<!-- <anydoor-text text="用户中心" :fontSize="30" bold :lines="1" lineHeight="42"></anydoor-text> -->
						</view>
						<view class="navbar-action flex flex-center flex-row pl-16 pr-16">
							<tm-icon :font-size="32" name="tmicon-cog-fill" _class="pl-16 pr-16"></tm-icon>
						</view>
					</view>
				</view>
			</template>
			<template #content>
				<!-- 填充占位元素 -->
				<view :style="{ width: '100%', height: statusBarHeight, marginTop: '70rpx' }"></view>
				<!-- 用户主信息 -->
				<view class="user-info flex flex-row" @click="toUserInfo">
					<view class="user-avatar">
						<!-- 120rpx margin 20rpx 40rpx -->
						<tm-avatar :img="userStore.avatar" :round="15" :size="120"></tm-avatar>
					</view>
					<view class="user-info flex-1 flex flex-col">
						<view class="user-info-username">
							<anydoor-text :text="!userStore.token ? '未登录' : userStore.nickname" :fontSize="40" :lines="1"
								lineHeight="80" bold></anydoor-text>
						</view>
						<view class="user-info-other flex-1">
							<anydoor-text text="" :fontSize="25" :lines="1" lineHeight="40" color="grey">
							</anydoor-text>
						</view>
					</view>
					<view class="user-action flex flex-col flex-center">
						<tm-icon :font-size="30" name="tmicon-angle-right" color="grey"></tm-icon>
					</view>
				</view>
				<!-- 社区信息 -->
				<!-- <view class="user-community flex flex-row">
					<view class="user-community-itme flex-1">
						<anydoor-text text="0" :fontSize="35" :lines="1" lineHeight="40" bold style="text-align: center;">
						</anydoor-text>
						<anydoor-text text="动态" :fontSize="25" :lines="1" lineHeight="40" color="grey"
							style="text-align: center;"></anydoor-text>
					</view>
					<view class="user-community-itme flex-1">
						<anydoor-text text="0" :fontSize="35" :lines="1" lineHeight="40" bold style="text-align: center;">
						</anydoor-text>
						<anydoor-text text="关注" :fontSize="25" :lines="1" lineHeight="40" color="grey"
							style="text-align: center;"></anydoor-text>
					</view>
					<view class="user-community-itme flex-1">
						<anydoor-text text="0" :fontSize="35" :lines="1" lineHeight="40" bold style="text-align: center;">
						</anydoor-text>
						<anydoor-text text="粉丝" :fontSize="25" :lines="1" lineHeight="40" color="grey"
							style="text-align: center;"></anydoor-text>
					</view>
				</view> -->
				<!-- 账户登录信息 -->
				<view class="user-account-login">
					<view class="user-account-login-item flex flex-row round-5" :style="{
						backgroundColor: vipBg
					}" @click="toJiaowuLogin">
						<view class="flex flex-row flex-col flex-1 mr-n10">
							<view class="flex flex-1 flex-row">
								<tm-icon :font-size="32" name="tmicon-gem" _class="pr-10" color="vip"></tm-icon>
								<anydoor-text class="flex-1" :text="jiaowuStore.jiaowuConfig.user_description" bold
									:fontSize="32" :lines="1" lineHeight="60" color="vip"></anydoor-text>
							</view>
							<anydoor-text :text="jiaowuStore.jiaowuAccount.username" :fontSize="25" :lines="1"
								lineHeight="40" color="white">
							</anydoor-text>
						</view>
						<view class="user-account-item-action round-3" :style="{ backgroundColor: vipTextColor }">
							<anydoor-text
								:text="jiaowuStore.isLogin ? jiaowuStore.jiaowuConfig.user_login_description : jiaowuStore.jiaowuConfig.user_not_login_description"
								:fontSize="25" :lines="1" lineHeight="50" color="black" bold>
							</anydoor-text>
						</view>
					</view>
				</view>
				<!-- 功能列表 -->
				<!-- 应用中心 -->
				<tm-divider :border="5"></tm-divider>
				<view>
					<!-- <tm-cell :margin="[20, 0]" :titleFontSize="32" title="应用中心" transprent> </tm-cell> -->
					<tm-cell @click="linkTo(ROUTE_PATH.SETTING)" :margin="[20, 0]" :titleFontSize="32" title="设置"
						transprent> </tm-cell>
					<tm-cell @click="linkTo(ROUTE_PATH.DOWNLOAD)" :margin="[20, 0]" :titleFontSize="32" title="我的下载"
						transprent> </tm-cell>
				</view>
				<tm-divider :border="5"></tm-divider>
				<!-- 菜单功能 -->
				<view>
					<anydoor-label labelText="教务" :rectSize="0" rectColor="primary" :actionFontSize="27"
						style="margin:20rpx 0">
						<template v-slot:action>
							<text></text>
						</template>
					</anydoor-label>
					<tm-grid :width="750" :col="4" transprent>
						<tm-grid-item :height="150" v-for="item in jw_menu_list" :key="item.mid" @click="menuLink(item)">
							<tm-icon :name="item.path" :font-size="58"></tm-icon>
							<anydoor-text _class="pt-10" :text="item.title" :fontSize="22" :lines="1">
							</anydoor-text>
						</tm-grid-item>
						<!-- <tm-grid-item color="orange" :height="120" count="积分" dot>
							<tm-icon name="tmicon-cog-fill" :font-size="58"></tm-icon>
							<anydoor-text _class="pt-10" text="宫格文本" :fontSize="22" :lines="1">
							</anydoor-text>
						</tm-grid-item> -->
					</tm-grid>
				</view>
				<view>
					<anydoor-label labelText="生活" :rectSize="0" rectColor="primary" :actionFontSize="27"
						style="margin:20rpx 0">
						<template v-slot:action>
							<text></text>
						</template>
					</anydoor-label>
					<tm-grid :width="750" :col="4" transprent>
						<tm-grid-item :height="150" v-for="item in life_menu_list" :key="item.mid" @click="menuLink(item)">
							<tm-icon :name="item.path" :font-size="58"></tm-icon>
							<anydoor-text _class="pt-10" :text="item.title" :fontSize="22" :lines="1">
							</anydoor-text>
						</tm-grid-item>
						<!-- <tm-grid-item color="pink" :height="120" icon="tmicon-gem">
							<tm-icon name="tmicon-layergroup-fill" :font-size="58"></tm-icon>
							<anydoor-text _class="pt-10" text="宫格文本" :fontSize="22" :lines="1">
							</anydoor-text>
						</tm-grid-item> -->
					</tm-grid>
				</view>
				<view>
					<anydoor-label labelText="我的服务" :rectSize="0" rectColor="primary" :actionFontSize="27"
						style="margin:20rpx 0">
						<template v-slot:action>
							<text></text>
						</template>
					</anydoor-label>
					<tm-grid :width="750" :col="4" transprent>
						<tm-grid-item :height="150" v-for="item in my_menu_list" :key="item.mid" @click="menuLink(item)">
							<tm-icon :name="item.path" :font-size="58"></tm-icon>
							<anydoor-text _class="pt-10" :text="item.title" :fontSize="22" :lines="1">
							</anydoor-text>
						</tm-grid-item>
					</tm-grid>
				</view>
				<view>
					<anydoor-label labelText="推荐" :rectSize="0" rectColor="primary" :actionFontSize="27"
						style="margin:20rpx 0">
						<template v-slot:action>
							<text></text>
						</template>
					</anydoor-label>
					<tm-grid :width="750" :col="4" transprent>
						<tm-grid-item :height="150" v-for="item in recommend_menu_list" :key="item.mid"
							@click="menuLink(item)">
							<tm-icon :name="item.path" :font-size="58"></tm-icon>
							<anydoor-text _class="pt-10" :text="item.title" :fontSize="22" :lines="1">
							</anydoor-text>
						</tm-grid-item>
					</tm-grid>
				</view>
			</template>
		</anydoorPage>
	</tm-app>
</template>

<script lang="ts" setup>
import {
	getCurrentInstance,
	computed,
	ref,
	onMounted
} from "vue"
import {
	useTmpiniaStore
} from '@/tmui/tool/lib/tmpinia';

import tmApp from "@/tmui/components/tm-app/tm-app.vue"
import tmNavbar from "@/tmui/components/tm-navbar/tm-navbar.vue"
import tmIcon from "@/tmui/components/tm-icon/tm-icon.vue"
import tmSheet from "@/tmui/components/tm-sheet/tm-sheet.vue"
import tmAvatar from "@/tmui/components/tm-avatar/tm-avatar.vue"
import anydoorText from "@/components/anydoor-text/anydoor-text.vue"
import anydoorLabel from "@/components/anydoor-label/anydoor-label.vue"
import tmGridItem from "@/tmui/components/tm-grid-item/tm-grid-item.vue"
import tmGrid from "@/tmui/components/tm-grid/tm-grid.vue"
import tmCell from "@/tmui/components/tm-cell/tm-cell.vue"
import tmDivider from "@/tmui/components/tm-divider/tm-divider.vue"
import anydoorPage from "@/components/anydoor-page/anydoor-page.vue"
import {
	onLoad,
	onPageScroll
} from "@dcloudio/uni-app"

import { linkTo, menuLink } from "@/common/utils/link"
import { listMyMenu } from "@/common/service/menu";
import { UNI_STORAGE } from "@/common/database/UNI_STORAGE";
import { MENU_TYPES } from "@/common/define/menuType";
import useJiaowuStore from "@/store/jiaowu";
import { ROUTE_PATH } from "@/router/ROUTE_PATH";
const store = useTmpiniaStore();

//教务的store
const jiaowuStore = useJiaowuStore()

//跳转教务Login
const toJiaowuLogin = () => {
	//已登录
	if (jiaowuStore.isLogin) {
		linkTo(ROUTE_PATH.JIAOWU_MY)
	}
	//未登录
	else {
		linkTo(ROUTE_PATH.COMPANY_SELECT)
	}
}

const {
	proxy
}:any = getCurrentInstance()
// 主题工具
import theme from "@/tmui/tool/theme/theme"
import { useUserStore } from "@/store/user";
import User from "@/common/database/user/User";
const userStore = useUserStore()

//菜单项
const jw_menu_list = ref<any>([])
const life_menu_list = ref<any>([])
const my_menu_list = ref<any>([])
const recommend_menu_list = ref<any>([])


//加载数据
onLoad(() => {
	loadCache()
	getMyMenu()
})
//加载缓存
const loadCache = () => {
	//首先读取缓存
	try {
		//读取菜单列表
		const menu_list_temp = uni.getStorageSync(UNI_STORAGE.MENU_MY_LIST)
		if (menu_list_temp) {
			jw_menu_list.value = menu_list_temp[MENU_TYPES.JW]
			life_menu_list.value = menu_list_temp[MENU_TYPES.LIFE]
			my_menu_list.value = menu_list_temp[MENU_TYPES.MY]
			recommend_menu_list.value = menu_list_temp[MENU_TYPES.RECOMMEND]
		}
	} catch { }
}

//账户背景
const vipBg = computed(() => {
	return theme.getColor("vipBg").value
})
//字体
const vipTextColor = computed(() => {
	return theme.getColor("vip").value
})
//导航栏背景
// const navbarBg = computed(() => {
// 	if (store.tmStore.dark)
// 		return `rgba(0, 0, 0, ${pageScrollY.value / num > 1 ? 1 : pageScrollY.value / num})`
// 	else {
// 		return `rgba(255, 255, 255, ${pageScrollY.value / num > 1 ? 1 : pageScrollY.value / num})`
// 	}
// })
// const pageScrollY = ref(0)
// const num = 70
// //页面滚动
// onPageScroll((e) => {
// 	throttle(() => {
// 		pageScrollY.value = e.scrollTop >= num ? num : (e.scrollTop < 0 ? 0 : e.scrollTop)
// 	}, 1000 / 120)()
// })
// //navbarHeight
const statusBarHeight = uni.getSystemInfoSync().statusBarHeight

//下拉刷新是否完成
const refreshComplete = ref<boolean>(true)
// 页面刷新
const refresh = async () => {
	refreshComplete.value = false
	//获取菜单
	await getMyMenu()
	//如果登录了
	if (userStore.token) {
		//刷新用户信息
		await User.getInstance().then((res) => res.refreshUserInfo())
	}
	refreshComplete.value = true
}


//我的部分的菜单
const getMyMenu = async () => {
	const data = await listMyMenu({})
	//菜单类型
	jw_menu_list.value = data[MENU_TYPES.JW]
	life_menu_list.value = data[MENU_TYPES.LIFE]
	my_menu_list.value = data[MENU_TYPES.MY]
	recommend_menu_list.value = data[MENU_TYPES.RECOMMEND]
}

//跳转用户信息
const toUserInfo = () => {
	if (userStore.token) {
		linkTo(ROUTE_PATH.DETAIL)
	} else {
		linkTo(ROUTE_PATH.LOGIN)
	}
}

onLoad(() => {
})
</script>

<style scoped lang="scss">
.index-navbar-box {
	width: 750rpx;

	.index-navbar {
		padding: 15rpx 0;
	}
}



.user-info {
	.user-avatar {
		margin: 20rpx 40rpx;
		width: 120rpx;
	}

	.user-info {
		margin: 20rpx 0;
	}

	.user-action {
		width: 100rpx;
	}
}

.user-community {
	margin: 20rpx 60rpx;
}

.user-account-login {
	margin: 10rpx 30rpx;

	.user-account-login-item {
		margin: 10rpx;
		padding: 20rpx 40rpx;

		.user-account-item-action {
			height: 50rpx;
			padding: 0 20rpx;
			align-self: center;
		}
	}
}
</style>
